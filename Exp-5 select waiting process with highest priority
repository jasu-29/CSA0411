/* sjf_nonpreemptive.c
   Non-preemptive Shortest Job First scheduling */
#include <stdio.h>

int main(){
    int n;
    printf("Number of processes: ");
    scanf("%d",&n);
    int at[n], bt[n], ct[n], wt[n], tat[n], done[n];
    for(int i=0;i<n;i++){
        printf("Arrival time and Burst time for P%d: ", i+1);
        scanf("%d %d",&at[i], &bt[i]);
        done[i]=0;
    }
    int t=0, completed=0;
    while(completed<n){
        int idx=-1, minbt=1e9;
        for(int i=0;i<n;i++){
            if(!done[i] && at[i]<=t && bt[i]<minbt){
                minbt=bt[i]; idx=i;
            }
        }
        if(idx==-1){ t++; continue; }
        t += bt[idx];
        ct[idx]=t;
        tat[idx]=ct[idx]-at[idx];
        wt[idx]=tat[idx]-bt[idx];
        done[idx]=1; completed++;
    }
    printf("P#\tAT\tBT\tCT\tTAT\tWT\n");
    for(int i=0;i<n;i++) printf("P%d\t%d\t%d\t%d\t%d\t%d\n",i+1,at[i],bt[i],ct[i],tat[i],wt[i]);
    return 0;
}
