/* my_ls.c
   Simple ls - list directory with permissions and size
   Compile: gcc my_ls.c -o my_ls
   Run: ./my_ls [path]
*/
#include <stdio.h>
#include <dirent.h>
#include <sys/stat.h>
#include <pwd.h>
#include <grp.h>

void print_mode(mode_t m) {
    char s[11] = "----------";
    if (S_ISDIR(m)) s[0]='d';
    if (m & S_IRUSR) s[1]='r';
    if (m & S_IWUSR) s[2]='w';
    if (m & S_IXUSR) s[3]='x';
    if (m & S_IRGRP) s[4]='r';
    if (m & S_IWGRP) s[5]='w';
    if (m & S_IXGRP) s[6]='x';
    if (m & S_IROTH) s[7]='r';
    if (m & S_IWOTH) s[8]='w';
    if (m & S_IXOTH) s[9]='x';
    printf("%s ", s);
}

int main(int argc, char *argv[]) {
    const char *path = (argc>1)?argv[1]:".";
    DIR *d = opendir(path);
    if (!d) { perror("opendir"); return 1; }
    struct dirent *de;
    while ((de = readdir(d)) != NULL) {
        char full[1024];
        snprintf(full, sizeof(full), "%s/%s", path, de->d_name);
        struct stat st;
        if (stat(full, &st)==0) {
            print_mode(st.st_mode);
            printf("%5lld %s\n", (long long)st.st_size, de->d_name);
        } else {
            printf("???????? %s\n", de->d_name);
        }
    }
    closedir(d);
    return 0;
}
